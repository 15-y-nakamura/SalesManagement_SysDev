<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="GamenKousinBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADkAAAAyCAYAAADm33NGAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAABKJJREFUaEPlWkeIFEEUNYIYEBHEgOmgHhRBxACKoCJ6UjAhCnoSRVAEPXgxoQcx
        gZ7ECKIgIuaEYc26BlzXvKu4u2bdNef4/c+uanumf/VUz053764PHsN0//pVr6v6/wpdi+g31XSwyJqP
        nIp8+ZVobQnRjEKikflEvU8QtT7Ilex0fvEf13F/fSlR+TdVMGJUWuTdD0QL7hD1YgEQE5Z9TxIt5PLF
        7CcqZC3ywSeiCZeJ6uzyNzwbws+kK0Rl7DfXCC3y6ReiKQVE9XIkLp31dxNNu0b0god+rhBK5MlyoiZ7
        /Q2Lgk33OfXlAtYitzx0nrLUoKiI+rY/Vg2oBKxELinyN8DEAaeJVt4jOv+KqIiDSYWKoPjFf1xfwff7
        n5LLS1xW7PjIFhlFbuBQL1XsJYbworvhUwLeO0TmRntkv15uKlOFskCgSLwTUoVezrpB9KqS+Q69PPO6
        7N/LMxWqQEgYRZZwKG/GL79UGdiYey/vpTLOEQ4/d/xK9YFoz8PPyjgEjCKRpKWKwHaHiW69V4Y5Bvy2
        OSTXCw48owxDQBS544nfuSaeJno5SmCiETSK9jxVhpbwifz+i6g995TkHCEd0TEOnOX3r65hwtH5CNHP
        EIsnn8jlHK4lx+BWzpVxYh1P9qV2gKvuKyML+ES2UquGdA47pwxixmB+B6X2dOTRZosUkVff+J1pXohp
        mKbjHNcrtQe88U4ZZUCKSCRmyVn348ogIXQ9JrdrMU9AbJAiskee3xGI9V6SmHdbbhcW4TZwRf7gaFVb
        cATaDotc4ctPoq8c5TUK38rtQnvTgyzKecsCrshSzk2So04cruMEUtiQs06g++ZpbAdDWnvsmQHBHuXS
        y7oikZckJ+MuKYMYoAXqutFYjDBgzMXUdmnmv3bua4H6uleoK3Lbo38GXk4tUAYRI12g5vALjtDJV/33
        QMzOcN8rUFMLdUWaJgFzbiqDCGESqAmhWO1I97B2xX3pHvhXvKrn78JUMprNzqNG+lCT2IVjQ5jrmiPw
        AFQ9tJkXpZLRxCvKIGLYCA1L7Cb+4qHsisRaTjIcyhXHBQgdZJjGhSUE6vTiiiww5KIWB5RBTECODHo/
        bYjRhx7UcEViP1UqAF5PYDKQbY+O5lTjFQi4IgHTCgSRN25k06NjWaC0zkwROb3QXxBEZUkgTI+iB00L
        6RSRpt05rNDvRLSnkwk2PToqP3inIEUk7Jrv9zsB+51ybJJAUI/qGVEQUkQC2CSWnIFLE3g3NSShyKuZ
        BAI+kXBm2hLE8drRF8owAXiF6nmpDXwigY0BRwM4bbr/URkmAAidy4toW4GAKBJ5ppthywFsyanmolri
        VAeIIoHbHE2DDmKwB7s6xLZgkjCKBI7w+2fa4NXsc4Jo7zNVoIoiUCSw5oFfmETsqGHz+d0PVbAKIaNI
        AKlDEmZizzznM5advGrH9gSG/qPPyT0AK5HAAR6SDS0OSzNxPkfGuGEtEsDWZNuAYzUbVnmRwHsectj3
        aZBlr1YLkRo48R3Pq2/ThrSJ1UqkBgIKjtFwApwp3YDVUqQX+EACX4voDwhxJK8/IKwxIqsq/gORRH8A
        Wzx/pNZq9/MAAAAASUVORK5CYII=
</value>
  </data>
</root>